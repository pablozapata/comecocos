/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guicomecocos;

import data.Comecocos;
import data.Rejilla;
import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author Jose Ignacio
 */
public class RejillaPanel extends javax.swing.JPanel {

    private ComecocosFrame frame; /**Variable para acceder a ComecocosFrame.*/
    private int anchoCelda = 15;
    /**
     * Creates new form RejillaPanel
     */
    public RejillaPanel() {
        initComponents();
    }
    
    /*Constructor para inicializar el dato miembro frame
     * 
     * @param fr 
     */
    public RejillaPanel(ComecocosFrame fr) {
        this();
        frame = fr;
    }
    /**Clase con la que dibujamos gráficamente el mapa del laberinto
     * 
     * @param g - elemento gráfico
     */
    public void dibujaLaberinto(Graphics g){
        Rejilla rejilla = frame.getLaberinto();
         g.setColor(Color.WHITE);
         g.fillRect(0, 0, getWidth(), getHeight());
        
        for(int i=0; i<31; i++){
            for(int j=0; j<28; j++){
                if(rejilla.getCelda(i,j) == 'B'){
                    g.setColor(Color.GRAY);
                    g.fillRect(j*anchoCelda,i*anchoCelda,anchoCelda,anchoCelda);
                }else if(rejilla.getCelda(i, j) == 'P'){
                    g.setColor(Color.BLACK);
                    g.drawLine(j*anchoCelda, 
                               i*anchoCelda+3*anchoCelda/4,
                               (j+1)*anchoCelda,
                               i*anchoCelda+3*anchoCelda/4);
                    g.drawLine(j*anchoCelda, 
                               i*anchoCelda+2*anchoCelda/4,
                               (j+1)*anchoCelda,
                               i*anchoCelda+2*anchoCelda/4);
                }else if(rejilla.getCelda(i, j) == '.'){
                    g.setColor(Color.BLACK);
                    g.drawArc(j*anchoCelda+anchoCelda/2, 
                              i*anchoCelda+anchoCelda/2, 
                              2, 2, 0, 360);
                    g.fillArc(j*anchoCelda+anchoCelda/2, 
                              i*anchoCelda+anchoCelda/2, 
                              2, 2, 0, 360);
                }
                else if(rejilla.getCelda(i, j) == 'o'){
                    g.setColor(Color.BLACK);
                    g.drawArc(j*anchoCelda+anchoCelda/3, 
                              i*anchoCelda+anchoCelda/3, 
                              6, 6, 0, 360);
                    g.fillArc(j*anchoCelda+anchoCelda/3, 
                              i*anchoCelda+anchoCelda/3, 
                              6, 6, 0, 360);
                }
            }
        }
    }
    
     public void dibujaComecocos(Graphics g, Comecocos comecocos){
        
        int barrido;
        int posicionX;
        int posicionY;

        int[] angulo={125,45,310,210};
            Rejilla rejilla = frame.getLaberinto();
            g.setColor(Color.YELLOW);
     }
    
    @Override
    protected void paintComponent(Graphics g){
        super.paintComponent(g);
        dibujaLaberinto(g);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
